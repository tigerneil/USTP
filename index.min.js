/**
 * Minified by jsDelivr using Terser v5.19.2.
 * Original file: /npm/openai@4.66.1/index.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
"use strict";var _a,__createBinding=this&&this.__createBinding||(Object.create?function(r,e,o,t){void 0===t&&(t=o);var n=Object.getOwnPropertyDescriptor(e,o);n&&!("get"in n?!e.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return e[o]}}),Object.defineProperty(r,t,n)}:function(r,e,o,t){void 0===t&&(t=o),r[t]=e[o]}),__setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(r,e){Object.defineProperty(r,"default",{enumerable:!0,value:e})}:function(r,e){r.default=e}),__importStar=this&&this.__importStar||function(r){if(r&&r.__esModule)return r;var e={};if(null!=r)for(var o in r)"default"!==o&&Object.prototype.hasOwnProperty.call(r,o)&&__createBinding(e,r,o);return __setModuleDefault(e,r),e};Object.defineProperty(exports,"__esModule",{value:!0}),exports.AzureOpenAI=exports.fileFromPath=exports.toFile=exports.UnprocessableEntityError=exports.PermissionDeniedError=exports.InternalServerError=exports.AuthenticationError=exports.BadRequestError=exports.RateLimitError=exports.ConflictError=exports.NotFoundError=exports.APIUserAbortError=exports.APIConnectionTimeoutError=exports.APIConnectionError=exports.APIError=exports.OpenAIError=exports.OpenAI=void 0;const Errors=__importStar(require("./error.js")),Uploads=__importStar(require("./uploads.js")),qs=__importStar(require("./internal/qs/index.js")),Core=__importStar(require("./core.js")),Pagination=__importStar(require("./pagination.js")),API=__importStar(require("./resources/index.js"));class OpenAI extends Core.APIClient{constructor({baseURL:r=Core.readEnv("OPENAI_BASE_URL"),apiKey:e=Core.readEnv("OPENAI_API_KEY"),organization:o=Core.readEnv("OPENAI_ORG_ID")??null,project:t=Core.readEnv("OPENAI_PROJECT_ID")??null,...n}={}){if(void 0===e)throw new Errors.OpenAIError("The OPENAI_API_KEY environment variable is missing or empty; either provide it, or instantiate the OpenAI client with an apiKey option, like new OpenAI({ apiKey: 'My API Key' }).");const i={apiKey:e,organization:o,project:t,...n,baseURL:r||"https://api.openai.com/v1"};if(!i.dangerouslyAllowBrowser&&Core.isRunningInBrowser())throw new Errors.OpenAIError("It looks like you're running in a browser-like environment.\n\nThis is disabled by default, as it risks exposing your secret API credentials to attackers.\nIf you understand the risks and have appropriate mitigations in place,\nyou can set the `dangerouslyAllowBrowser` option to `true`, e.g.,\n\nnew OpenAI({ apiKey, dangerouslyAllowBrowser: true });\n\nhttps://help.openai.com/en/articles/5112595-best-practices-for-api-key-safety\n");super({baseURL:i.baseURL,timeout:i.timeout??6e5,httpAgent:i.httpAgent,maxRetries:i.maxRetries,fetch:i.fetch}),this.completions=new API.Completions(this),this.chat=new API.Chat(this),this.embeddings=new API.Embeddings(this),this.files=new API.Files(this),this.images=new API.Images(this),this.audio=new API.Audio(this),this.moderations=new API.Moderations(this),this.models=new API.Models(this),this.fineTuning=new API.FineTuning(this),this.beta=new API.Beta(this),this.batches=new API.Batches(this),this.uploads=new API.Uploads(this),this._options=i,this.apiKey=e,this.organization=o,this.project=t}defaultQuery(){return this._options.defaultQuery}defaultHeaders(r){return{...super.defaultHeaders(r),"OpenAI-Organization":this.organization,"OpenAI-Project":this.project,...this._options.defaultHeaders}}authHeaders(r){return{Authorization:`Bearer ${this.apiKey}`}}stringifyQuery(r){return qs.stringify(r,{arrayFormat:"brackets"})}}exports.OpenAI=OpenAI,_a=OpenAI,OpenAI.OpenAI=_a,OpenAI.DEFAULT_TIMEOUT=6e5,OpenAI.OpenAIError=Errors.OpenAIError,OpenAI.APIError=Errors.APIError,OpenAI.APIConnectionError=Errors.APIConnectionError,OpenAI.APIConnectionTimeoutError=Errors.APIConnectionTimeoutError,OpenAI.APIUserAbortError=Errors.APIUserAbortError,OpenAI.NotFoundError=Errors.NotFoundError,OpenAI.ConflictError=Errors.ConflictError,OpenAI.RateLimitError=Errors.RateLimitError,OpenAI.BadRequestError=Errors.BadRequestError,OpenAI.AuthenticationError=Errors.AuthenticationError,OpenAI.InternalServerError=Errors.InternalServerError,OpenAI.PermissionDeniedError=Errors.PermissionDeniedError,OpenAI.UnprocessableEntityError=Errors.UnprocessableEntityError,OpenAI.toFile=Uploads.toFile,OpenAI.fileFromPath=Uploads.fileFromPath,exports.OpenAIError=Errors.OpenAIError,exports.APIError=Errors.APIError,exports.APIConnectionError=Errors.APIConnectionError,exports.APIConnectionTimeoutError=Errors.APIConnectionTimeoutError,exports.APIUserAbortError=Errors.APIUserAbortError,exports.NotFoundError=Errors.NotFoundError,exports.ConflictError=Errors.ConflictError,exports.RateLimitError=Errors.RateLimitError,exports.BadRequestError=Errors.BadRequestError,exports.AuthenticationError=Errors.AuthenticationError,exports.InternalServerError=Errors.InternalServerError,exports.PermissionDeniedError=Errors.PermissionDeniedError,exports.UnprocessableEntityError=Errors.UnprocessableEntityError,exports.toFile=Uploads.toFile,exports.fileFromPath=Uploads.fileFromPath,function(r){r.Page=Pagination.Page,r.CursorPage=Pagination.CursorPage,r.Completions=API.Completions,r.Chat=API.Chat,r.Embeddings=API.Embeddings,r.Files=API.Files,r.FileObjectsPage=API.FileObjectsPage,r.Images=API.Images,r.Audio=API.Audio,r.Moderations=API.Moderations,r.Models=API.Models,r.ModelsPage=API.ModelsPage,r.FineTuning=API.FineTuning,r.Beta=API.Beta,r.Batches=API.Batches,r.BatchesPage=API.BatchesPage,r.Uploads=API.Uploads}(OpenAI=exports.OpenAI||(exports.OpenAI={}));class AzureOpenAI extends OpenAI{constructor({baseURL:r=Core.readEnv("OPENAI_BASE_URL"),apiKey:e=Core.readEnv("AZURE_OPENAI_API_KEY"),apiVersion:o=Core.readEnv("OPENAI_API_VERSION"),endpoint:t,deployment:n,azureADTokenProvider:i,dangerouslyAllowBrowser:s,...a}={}){if(!o)throw new Errors.OpenAIError("The OPENAI_API_VERSION environment variable is missing or empty; either provide it, or instantiate the AzureOpenAI client with an apiVersion option, like new AzureOpenAI({ apiVersion: 'My API Version' }).");if("function"==typeof i&&(s=!0),!i&&!e)throw new Errors.OpenAIError("Missing credentials. Please pass one of `apiKey` and `azureADTokenProvider`, or set the `AZURE_OPENAI_API_KEY` environment variable.");if(i&&e)throw new Errors.OpenAIError("The `apiKey` and `azureADTokenProvider` arguments are mutually exclusive; only one can be passed at a time.");if(e??(e=API_KEY_SENTINEL),a.defaultQuery={...a.defaultQuery,"api-version":o},r){if(t)throw new Errors.OpenAIError("baseURL and endpoint are mutually exclusive")}else{if(t||(t=process.env.AZURE_OPENAI_ENDPOINT),!t)throw new Errors.OpenAIError("Must provide one of the `baseURL` or `endpoint` arguments, or the `AZURE_OPENAI_ENDPOINT` environment variable");r=`${t}/openai`}super({apiKey:e,baseURL:r,...a,...void 0!==s?{dangerouslyAllowBrowser:s}:{}}),this.apiVersion="",this._azureADTokenProvider=i,this.apiVersion=o,this._deployment=n}buildRequest(r){if(_deployments_endpoints.has(r.path)&&"post"===r.method&&void 0!==r.body){if(!Core.isObj(r.body))throw new Error("Expected request body to be an object");const e=this._deployment||r.body.model;void 0===e||this.baseURL.includes("/deployments")||(r.path=`/deployments/${e}${r.path}`)}return super.buildRequest(r)}async _getAzureADToken(){if("function"==typeof this._azureADTokenProvider){const r=await this._azureADTokenProvider();if(!r||"string"!=typeof r)throw new Errors.OpenAIError(`Expected 'azureADTokenProvider' argument to return a string but it returned ${r}`);return r}}authHeaders(r){return{}}async prepareOptions(r){if(r.headers?.["api-key"])return super.prepareOptions(r);const e=await this._getAzureADToken();if(r.headers??(r.headers={}),e)r.headers.Authorization=`Bearer ${e}`;else{if(this.apiKey===API_KEY_SENTINEL)throw new Errors.OpenAIError("Unable to handle auth");r.headers["api-key"]=this.apiKey}return super.prepareOptions(r)}}exports.AzureOpenAI=AzureOpenAI;const _deployments_endpoints=new Set(["/completions","/chat/completions","/embeddings","/audio/transcriptions","/audio/translations","/audio/speech","/images/generations"]),API_KEY_SENTINEL="<Missing Key>";exports=module.exports=OpenAI,module.exports.AzureOpenAI=AzureOpenAI,exports.default=OpenAI;
//# sourceMappingURL=/sm/cd4018bcb84bcab28266cc0714bc75fc35506b081a347d2473ed240f0df380be.map